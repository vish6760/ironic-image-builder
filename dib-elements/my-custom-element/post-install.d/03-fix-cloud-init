#!/bin/bash

# ✅ Enable debugging mode based on a condition
if [ 0 -gt 0 ]; then
    set -x
else
    set -v
fi

set -eu
set -o pipefail

# ✅ Detect the distribution name and release version


echo "Detected OS: ${DISTRO_NAME}"
echo "Release: ${DIB_RELEASE}"

# ✅ Function to apply cloud-init fixes for CentOS 9 Stream
fix_cloud_init_centos() {
    echo "Applying cloud-init fixes for CentOS 9 Stream..."

    # ✅ Check if cloud-init systemd unit directory exists and fix service linking
    if [ -d /etc/systemd/system/cloud-init.target.wants ]; then
        echo "Fixing systemd cloud-init units..."
        systemctl disable cloud-init cloud-init-local cloud-config cloud-final || true
        mv /etc/systemd/system/cloud-init.target.wants/* /etc/systemd/system/multi-user.target.wants/ || true
        rm -rf /etc/systemd/system/cloud-init.target.wants
    fi

    # ✅ Disable EC2 datasource strict ID check
    echo "Disabling strict EC2 ID check..."
    cat << EOT > /etc/cloud/cloud.cfg.d/99-ec2-datasource.cfg
#cloud-config
datasource:
  Ec2:
    strict_id: false
EOT

    # ✅ Disable cloud-init warnings related to missing datasource ID
    cat << EOT > /etc/cloud/cloud.cfg.d/99-warnings.cfg
#cloud-config
warnings:
  dsid_missing_source: off
EOT

    # ✅ Configure only supported datasources
    echo "Configuring cloud-init datasources..."
    cat << EOT > /etc/cloud/cloud.cfg.d/99-datasource.cfg
#cloud-config
datasource_list:
  - OpenStack
  - Ec2
  - None
EOT
}

# ✅ Function to apply cloud-init fixes for Ubuntu
fix_cloud_init_ubuntu() {
    echo "Applying cloud-init fixes for Ubuntu..."

    # ✅ Ensure cloud-init service is enabled
    systemctl enable cloud-init || true

    # ✅ Disable unnecessary cloud-init services that might slow boot time
    echo "Disabling cloud-init services that are not required..."
    systemctl disable cloud-init-local || true
}

# ✅ Apply the appropriate fixes based on OS type
case "${DISTRO_NAME,,}" in
    "centos")
        if [[ "${DIB_RELEASE}" == "9" || "${DIB_RELEASE}" == "9-stream" ]]; then
            fix_cloud_init_centos
        else
            echo "Skipping cloud-init fixes: Not CentOS 9 Stream."
        fi
        ;;
    "ubuntu")
        fix_cloud_init_ubuntu
        ;;
    *)
        echo "Unsupported OS. No cloud-init fixes applied."
        exit 0
        ;;
esac

# ✅ Verify applied changes
echo "Cloud-init configuration files:"
ls -l /etc/cloud/cloud.cfg.d/

echo "Cloud-init fixes applied successfully."

